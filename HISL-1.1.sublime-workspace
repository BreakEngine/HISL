{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PTExp",
				"PTExpressionStmt"
			],
			[
				"compi",
				"compileBlock"
			],
			[
				"re",
				"returnType"
			],
			[
				"get",
				"getGLSLEq"
			],
			[
				"PTFunctionD",
				"PTFunctionDeclaration"
			],
			[
				"comp",
				"compileStatement"
			],
			[
				"PTArra",
				"PTArrayDeclaration"
			],
			[
				"Function",
				"FUNCTION_DEFINITION"
			],
			[
				"en",
				"endl"
			],
			[
				"var",
				"variables"
			],
			[
				"obj",
				"objType"
			],
			[
				"com",
				"compileExpression"
			],
			[
				"de",
				"default"
			],
			[
				"in",
				"instructions"
			],
			[
				"name",
				"namespace"
			],
			[
				"si",
				"signature"
			],
			[
				"main",
				"main_func"
			],
			[
				"pr",
				"predef"
			],
			[
				"config",
				"createConfigStatement"
			],
			[
				"vs",
				"vsStage"
			],
			[
				"code",
				"code_str"
			],
			[
				"getN",
				"getNodeName"
			],
			[
				"lan",
				"language"
			],
			[
				"file",
				"fileName"
			],
			[
				"ar",
				"argc"
			],
			[
				"arg",
				"argv"
			],
			[
				"par",
				"parseArgs"
			],
			[
				"ou",
				"outputFile"
			],
			[
				"out",
				"outputToFile"
			],
			[
				"typ",
				"type_constructor"
			],
			[
				"type",
				"type_construct"
			],
			[
				"PTType",
				"PTTypeConstructor"
			],
			[
				"PTTyp",
				"PTTypeConstructor"
			],
			[
				"PTT",
				"PTTypeConstructor"
			],
			[
				"CLO",
				"CLOSE_PAREN"
			],
			[
				"OPE",
				"OPEN_PAREN"
			],
			[
				"PTVar",
				"PTVariableDeclaration"
			],
			[
				"stru",
				"struct_block"
			],
			[
				"uni",
				"unifrom_block"
			],
			[
				"is",
				"isMemberOfType"
			],
			[
				"new",
				"new_dic"
			],
			[
				"pro",
				"program_block"
			],
			[
				"vari",
				"variable_spec"
			],
			[
				"I",
				"ID"
			],
			[
				"g",
				"g_var_dcl"
			],
			[
				"find",
				"findFunction"
			],
			[
				"chain",
				"chain_node"
			],
			[
				"sema",
				"semanticAnalysis"
			],
			[
				"res",
				"res_type"
			],
			[
				"cu",
				"curr"
			],
			[
				"curr",
				"currNode"
			],
			[
				"inf",
				"inferType"
			],
			[
				"h",
				"handleMultiplication"
			],
			[
				"createVar",
				"createVarCall"
			],
			[
				"m_",
				"m_env"
			],
			[
				"sem",
				"semanticAnalysis"
			],
			[
				"PTFunc",
				"PTFunctionCall"
			],
			[
				"PTFun",
				"PTFunctionCall"
			],
			[
				"PTA",
				"PTAccessChain"
			],
			[
				"arr",
				"arr_access"
			],
			[
				"lvalL",
				"lvalList"
			],
			[
				"lv",
				"lval"
			],
			[
				"ex",
				"expr"
			],
			[
				"PTEx",
				"PTExpression"
			],
			[
				"una",
				"unary_expr"
			],
			[
				"PTB",
				"PTBinaryExpression"
			],
			[
				"N",
				"NOT_EQL"
			],
			[
				"func_",
				"func_call"
			],
			[
				"OPEN",
				"OPEN_BRACE"
			],
			[
				"exp",
				"expression"
			],
			[
				"CLOS",
				"CLOSE_BRACE"
			],
			[
				"ass",
				"assignment"
			],
			[
				"_id",
				"_ids"
			],
			[
				"m_p",
				"m_PTroot"
			],
			[
				"m",
				"m_children"
			],
			[
				"struc",
				"struct_node"
			],
			[
				"crea",
				"createId"
			],
			[
				"val",
				"values"
			],
			[
				"print",
				"printTree"
			],
			[
				"fun",
				"function_def"
			],
			[
				"func_d",
				"func_def"
			],
			[
				"PTF",
				"PTFunctionDeclaration"
			],
			[
				"PTS",
				"PTStatement"
			],
			[
				"cre",
				"createId"
			],
			[
				"id",
				"identifier"
			],
			[
				"PT",
				"PTArg"
			],
			[
				"v",
				"variable_spec"
			],
			[
				"func",
				"function_dcl"
			],
			[
				"functio",
				"function_spec"
			],
			[
				"gene",
				"generic_stmt"
			],
			[
				"sta",
				"stage_stmts"
			],
			[
				"stage_",
				"stage_stmts"
			],
			[
				"stage",
				"stage_block"
			],
			[
				"b",
				"buffer_block"
			],
			[
				"cid",
				"cid"
			],
			[
				"ty",
				"typeExists"
			],
			[
				"cra",
				"createType"
			],
			[
				"st",
				"struct_stmts"
			],
			[
				"stu",
				"struct_block"
			],
			[
				"PTV",
				"PTVariableDeclaration"
			],
			[
				"PTSt",
				"PTStatement"
			],
			[
				"buff",
				"buffer_stmts"
			],
			[
				"variab",
				"variable_dcl"
			],
			[
				"prog",
				"program_block"
			],
			[
				"dec",
				"declaration_specifiers"
			],
			[
				"start",
				"start_node"
			],
			[
				"if",
				"ifstream"
			],
			[
				"Fam",
				"FamilyVisitor"
			],
			[
				"mem",
				"members"
			],
			[
				"per",
				"person"
			],
			[
				"pers",
				"persons"
			],
			[
				"Fa",
				"FamilyVisitor"
			],
			[
				"fam",
				"familyMembers"
			],
			[
				"node",
				"nodes"
			],
			[
				"Mai",
				"MailMan"
			],
			[
				"IN",
				"INT_VISIT"
			],
			[
				"struct",
				"structRow"
			],
			[
				"Func",
				"FunctionTable"
			],
			[
				"Var",
				"VariableTable"
			],
			[
				"NFunc",
				"NFunctionDeclaration"
			],
			[
				"inc",
				"increment"
			],
			[
				"expr",
				"exprstmt"
			],
			[
				"asse",
				"assert"
			],
			[
				"Ass",
				"ASSIGNMENT"
			],
			[
				"Type",
				"NodeTypeName"
			],
			[
				"NFucn",
				"NFunctionCall"
			],
			[
				"compileV",
				"compileVariableSemantic"
			],
			[
				"Ins",
				"InsNode"
			]
		]
	},
	"buffers":
	[
		{
			"file": "GLSLCompiler.hpp",
			"settings":
			{
				"buffer_size": 10649,
				"line_ending": "Windows"
			}
		},
		{
			"file": "scanner.l",
			"settings":
			{
				"buffer_size": 2372,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test/lexer.hisl",
			"settings":
			{
				"buffer_size": 813,
				"line_ending": "Windows",
				"name": "moka"
			}
		},
		{
			"file": "test/example01.hisl",
			"settings":
			{
				"buffer_size": 315,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parser.ypp",
			"settings":
			{
				"buffer_size": 14555,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Driver.hpp",
			"settings":
			{
				"buffer_size": 5249,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Globals.hpp",
			"settings":
			{
				"buffer_size": 572,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Globals.cpp",
			"settings":
			{
				"buffer_size": 1068,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Driver.cpp",
			"settings":
			{
				"buffer_size": 10305,
				"line_ending": "Windows"
			}
		},
		{
			"file": "scanner.cpp",
			"settings":
			{
				"buffer_size": 55050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Dictionary.hpp",
			"settings":
			{
				"buffer_size": 2651,
				"line_ending": "Windows",
				"name": "#pragma once"
			}
		},
		{
			"file": "Dictionary.cpp",
			"settings":
			{
				"buffer_size": 336,
				"line_ending": "Windows",
				"name": "#include \"Dictionary.hpp\""
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 182,
				"line_ending": "Unix"
			}
		},
		{
			"file": "make.bat",
			"settings":
			{
				"buffer_size": 170,
				"line_ending": "Windows"
			}
		},
		{
			"file": "PTree.cpp",
			"settings":
			{
				"buffer_size": 1485,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Compiler.hpp",
			"settings":
			{
				"buffer_size": 4196,
				"line_ending": "Windows"
			}
		},
		{
			"file": "hislc",
			"settings":
			{
				"buffer_size": 3726200,
				"line_ending": "Unix"
			}
		},
		{
			"file": "PTree.hpp",
			"settings":
			{
				"buffer_size": 32226,
				"line_ending": "Windows",
				"name": "#pragma once"
			}
		},
		{
			"file": "Env.hpp",
			"settings":
			{
				"buffer_size": 1250,
				"line_ending": "Windows",
				"name": "#pragma once"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 1506,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 140.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"glsl",
				"Set Syntax: OpenGL SL"
			],
			[
				"syn",
				"Set Syntax: Cg"
			],
			[
				"hlsl",
				"Set Syntax: High Level SL"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 356.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/Projects/Ubuntu/HISL-1.1"
	],
	"file_history":
	[
		"/E/Projects/Ubuntu/HISL-1.1/PTree.hpp",
		"/media/mostafa/Mostafa/Projects/Ubuntu/HISL-1.1/make.bat",
		"/media/mostafa/Mostafa/Projects/Ubuntu/HISL-1.1/Globals.cpp",
		"/media/mostafa/Mostafa/Projects/Ubuntu/HISL-1.1/parser.cpp",
		"/media/mostafa/Mostafa/Projects/Ubuntu/HISL-1.1/parser.output",
		"/media/mostafa/Mostafa/Projects/Ubuntu/HISL-1.1/Makefile",
		"/E/Projects/Ubuntu/Break_Test/TestApp.h",
		"/E/Projects/Ubuntu/Break_Test/main.cpp",
		"/E/Projects/Ubuntu/Break_Test/TestApp.cpp",
		"/E/Finished Projects/Break-exp-0.1/deps.sh",
		"/E/Finished Projects/Break-exp-0.1/install.sh",
		"/C/Users/Moustapha/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/E/Projects/HISL_LexYacc/Node.h",
		"/E/Projects/HISL_LexYacc/yacc.y",
		"/E/Projects/HISL_LexYacc/main.cpp",
		"/E/Projects/HISL-1.1/Globals.hpp",
		"/E/Projects/HISL_LexYacc/NodeFunctions.h",
		"/E/Projects/HISL-1.1/Driver.cpp",
		"/E/Projects/HISL-1.1/make.bat",
		"/E/Projects/HISL-1.1/parser.cpp",
		"/E/Projects/HISL_LexYacc/lex.l",
		"/E/Projects/HISL-1.1/scanner.cpp",
		"/E/Projects/HISL-1.1/parser.hpp",
		"/E/Projects/HISL-1.1/FlexLexer.h",
		"/C/Program Files/mingw-w64/x86_64-5.1.0-posix-seh-rt_v4-rev0/mingw64/x86_64-w64-mingw32/include/c++/FlexLexer.h",
		"/E/Projects/HISL-1.1/Scanner.hpp",
		"/F/Other's Projects/Savvy-master/Savvy/src/internal/SavvyDatabaseGLSL.cpp",
		"/F/Other's Projects/Savvy-master/Savvy/src/internal/SavvyConstructorGLSLToHLSL.cpp",
		"/E/Projects/HISL-1.1/parser.ypp",
		"/E/Projects/HISL-1.1/scanner.l",
		"/E/Projects/HISL-1.1/main.cpp",
		"/F/Other's Projects/Savvy-master/Savvy/src/SavvyParser.cpp",
		"/F/Other's Projects/Savvy-master/Savvy/src/internal/SavvyScannerGLSL.cpp",
		"/F/Other's Projects/Savvy-master/Savvy/src/internal/SavvyParserGLSL.cpp",
		"/E/Projects/JHISL/generateParser.bat",
		"/F/Bin/antlr4.bat",
		"/F/Bin/grun.bat",
		"/E/Projects/HISL_LexYacc/test/phase01.hisl",
		"/E/Projects/HISL_LexYacc/Librarian.h",
		"/E/Projects/HISL_LexYacc/Librarian.cpp",
		"/E/Projects/HISL_LexYacc/Converter.h",
		"/E/Projects/HISL_LexYacc/test/compileTest.hisl",
		"/E/Projects/HISL_LexYacc/Language.h",
		"/E/Projects/HISL_LexYacc/Language.cpp",
		"/E/Projects/HISL_LexYacc/HLSLang.h",
		"/E/Projects/HISL_LexYacc/GLSLang.h",
		"/E/Projects/HISL_LexYacc/Database.h",
		"/E/Projects/HISL_LexYacc/Database.cpp",
		"/E/Projects/HISL_LexYacc/test/final.hisl",
		"/E/Projects/HISL_LexYacc/HLSLDatabase.h",
		"/E/Projects/HISL_LexYacc/make.bat",
		"/E/Projects/HISL_LexYacc/tokens.cpp",
		"/E/Projects/HISL_LexYacc/NodeFunctions.cpp",
		"/E/Projects/HISL_LexYacc/parser.cpp",
		"/E/Projects/HISL_LexYacc/parser.hpp"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"public PTStatement",
			"class PTConfi",
			"class PTRout",
			"parse",
			"PTArg",
			"BUILTIN_VAR",
			"config",
			"block",
			"undefined function of name",
			";\n",
			"variable_spec",
			"stage_block",
			"stage",
			"g_var_dcl",
			"arr",
			"g_var_dcl",
			"program",
			"start",
			"undefined type",
			"function_spec",
			"variable_spec",
			"function_spec",
			"declaration_specifiers",
			"   declaration_specifiers",
			"declaration",
			"stage_stmts",
			"g_var_dcl",
			"stmt",
			"block",
			"stage_block",
			"generic_blck",
			"block",
			"access_chain",
			"PTBloc",
			"PTFunction",
			"&parent->m_env",
			"cout",
			"){\n",
			"semantic",
			"PTVaria",
			"number",
			"expr",
			"push_back",
			"createBlock",
			"declaration",
			"expr",
			"compileBinar",
			"compileFunctio",
			"compileArrayDec",
			"compileNode",
			"compileAss",
			"compileNode",
			"				\n",
			"compileFunctionCall",
			"compilevardcl",
			"->]\n",
			"ilocals",
			"IOBuffer",
			"class NFunc",
			"IOBUFFER",
			"compileFunction",
			"Error",
			"uniform",
			"Pixel",
			"NTypeCo",
			"printID",
			"()<<\";\";\n",
			"NVariableDe",
			"compileRe",
			"compileExpr",
			"compileExpre",
			"compileVar",
			"Type",
			"compile",
			"addLocals",
			"locals",
			"compilePro",
			"locals",
			"compilePro",
			"compile",
			"}\n",
			"ident",
			"binaryOper",
			"NIden",
			"NExpressionStatement",
			"isatty",
			"->id",
			"printID",
			"NVariableDeclaration",
			"NStruct",
			"NIOBuf",
			"NVariable",
			"block :",
			"block",
			"createNBlock",
			"NBlock",
			"NIdentifier",
			"createNFunctionCall",
			"Database",
			"texture",
			"dictionary[\"\"] = \"\";",
			"generateCode",
			"NVariableDec",
			"NVariableDel"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "GLSLCompiler.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10649,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1171.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "scanner.l",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2372,
						"regions":
						{
						},
						"selection":
						[
							[
								2314,
								2314
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 979.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test/lexer.hisl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 813,
						"regions":
						{
						},
						"selection":
						[
							[
								482,
								482
							]
						],
						"settings":
						{
							"auto_name": "moka",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 548.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test/example01.hisl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 315,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "parser.ypp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14555,
						"regions":
						{
						},
						"selection":
						[
							[
								7975,
								7975
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3528.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Driver.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5249,
						"regions":
						{
						},
						"selection":
						[
							[
								750,
								750
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 62.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Globals.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 572,
						"regions":
						{
						},
						"selection":
						[
							[
								219,
								219
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Globals.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1068,
						"regions":
						{
						},
						"selection":
						[
							[
								369,
								369
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Driver.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10305,
						"regions":
						{
						},
						"selection":
						[
							[
								1730,
								1730
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "scanner.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55050,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5236.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Dictionary.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2651,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 77.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "Dictionary.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 336,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"auto_name": "#include \"Dictionary.hpp\"",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 182,
						"regions":
						{
						},
						"selection":
						[
							[
								182,
								182
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "make.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 170,
						"regions":
						{
						},
						"selection":
						[
							[
								170,
								170
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "PTree.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1485,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "Compiler.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4196,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 112.0,
						"translation.y": 1047.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "hislc",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3726200,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1336795.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "PTree.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32226,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 30.0,
						"translation.y": 11691.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "Env.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1250,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1506,
						"regions":
						{
						},
						"selection":
						[
							[
								837,
								837
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 232.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "PTree.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32226,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14047.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 17,
					"file": "PTree.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32226,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "#pragma once",
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14806.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Driver.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5249,
						"regions":
						{
						},
						"selection":
						[
							[
								741,
								741
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 183.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "HISL-1.1.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pt",
				"PTree.hpp"
			],
			[
				"gl",
				"GLSLCompiler.hpp"
			],
			[
				"com",
				"Compiler.hpp"
			],
			[
				"d",
				"Driver.hpp"
			],
			[
				"e",
				"test\\example01.hisl"
			],
			[
				"ex",
				"test\\example01.hisl"
			],
			[
				"comp",
				"Compiler.hpp"
			],
			[
				"driv",
				"Driver.hpp"
			],
			[
				"dr",
				"Driver.hpp"
			],
			[
				"gls",
				"GLSLCompiler.hpp"
			],
			[
				"dri",
				"Driver.hpp"
			],
			[
				"le",
				"test\\lexer.hisl"
			],
			[
				"g",
				"GLSLCompiler.hpp"
			],
			[
				"c",
				"Compiler.hpp"
			],
			[
				"di",
				"Dictionary.hpp"
			],
			[
				"glsl",
				"GLSLCompiler.hpp"
			],
			[
				"exam",
				"test\\example01.hisl"
			],
			[
				"dic",
				"Dictionary.cpp"
			],
			[
				"",
				"PTree.cpp"
			],
			[
				"glo",
				"Globals.cpp"
			],
			[
				"p",
				"PTree.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"ma",
				"Makefile"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"dir",
				"Driver.hpp"
			],
			[
				"s",
				"scanner.l"
			],
			[
				"sc",
				"scanner.l"
			],
			[
				"l",
				"test/lexer.hisl"
			],
			[
				"pa",
				"parser.ypp"
			],
			[
				"drive",
				"Driver.hpp"
			],
			[
				"par",
				"parser.ypp"
			],
			[
				"driver",
				"Driver.cpp"
			],
			[
				"mai",
				"main.cpp"
			],
			[
				"m",
				"make.bat"
			],
			[
				"ya",
				"yacc.y"
			],
			[
				"no",
				"Node.h"
			],
			[
				"nod",
				"Node.h"
			],
			[
				"co",
				"test\\compileTest.hisl"
			],
			[
				"node",
				"Node.h"
			],
			[
				"lib",
				"Librarian.cpp"
			],
			[
				"conv",
				"Converter.h"
			],
			[
				"n",
				"Node.h"
			],
			[
				"lan",
				"Language.cpp"
			],
			[
				"hl",
				"HLSLang.h"
			],
			[
				"con",
				"Converter.h"
			],
			[
				"conver",
				"Converter.h"
			],
			[
				"cmo",
				"test\\compileTest.hisl"
			],
			[
				"nodef",
				"NodeFunctions.h"
			],
			[
				"nodefun",
				"NodeFunctions.h"
			],
			[
				"coim",
				"test\\compileTest.hisl"
			],
			[
				"yac",
				"yacc.y"
			],
			[
				"cn",
				"Converter.h"
			],
			[
				"cnv",
				"Converter.h"
			],
			[
				"make",
				"make.bat"
			],
			[
				"fin",
				"test\\final.hisl"
			],
			[
				"fi",
				"test\\final.hisl"
			],
			[
				"da",
				"Database.cpp"
			],
			[
				"hlsl",
				"HLSLang.h"
			],
			[
				"gll",
				"GLSLang.h"
			],
			[
				"func",
				"NodeFunctions.h"
			],
			[
				"hls",
				"HLSLang.h"
			],
			[
				"test",
				"test\\phase01.hisl"
			],
			[
				"convert",
				"Converter.h"
			],
			[
				"yacc.y",
				"yacc.y"
			],
			[
				"lex",
				"lex.l"
			],
			[
				"main.",
				"main.cpp"
			],
			[
				"funct",
				"NodeFunctions.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
